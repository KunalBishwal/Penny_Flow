"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/upload/page",{

/***/ "(app-pages-browser)/./lib/gemini.ts":
/*!***********************!*\
  !*** ./lib/gemini.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractExpenseDataFromGemini: () => (/* binding */ extractExpenseDataFromGemini)\n/* harmony export */ });\nasync function extractExpenseDataFromGemini(ocrText) {\n    // If the text contains \"OTP\" (case-insensitive), immediately return DENIED.\n    if (/otp/i.test(ocrText)) {\n        console.warn(\"‚ùå OTP detected in text. Denying processing.\");\n        return {\n            vendor: \"DENIED\",\n            amount: \"DENIED\",\n            date: \"DENIED\",\n            category: \"DENIED\"\n        };\n    }\n    const apiKey = \"AIzaSyAdRfAux0eLrzSP0X50bp3YbRyhuFJrzq4\";\n    if (!apiKey) {\n        throw new Error(\"Gemini API key is missing. Check your .env.local file.\");\n    }\n    const endpoint = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\".concat(apiKey);\n    const prompt = '\\nYou are an intelligent expense parser. Extract the following from messy receipt text:\\n- vendor\\n- amount (number only, no symbols)\\n- date (ISO format preferred)\\n- category (Food, Transport, Shopping, Utilities, Entertainment, Other)\\n\\nReceipt text:\\n\"\"\"\\n'.concat(ocrText, '\\n\"\"\"\\n\\nRespond ONLY with JSON like:\\n{\\n  \"vendor\": \"...\",\\n  \"amount\": \"...\",\\n  \"date\": \"...\",\\n  \"category\": \"...\"\\n}\\n');\n    try {\n        var _result_candidates, _candidate_content_parts_, _candidate_content_parts, _candidate_content;\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        parts: [\n                            {\n                                text: prompt\n                            }\n                        ]\n                    }\n                ]\n            })\n        });\n        const result = await response.json();\n        console.log(\"üîç Gemini full response:\", JSON.stringify(result, null, 2));\n        if (result.error) {\n            console.error(\"üî• Gemini API Error:\", result.error);\n            throw new Error(result.error.message || \"Unknown Gemini API error\");\n        }\n        const candidate = result === null || result === void 0 ? void 0 : (_result_candidates = result.candidates) === null || _result_candidates === void 0 ? void 0 : _result_candidates[0];\n        if (!candidate) {\n            console.error(\"‚ùå No candidates. Full response:\", JSON.stringify(result, null, 2));\n            throw new Error(\"No candidate found in Gemini response\");\n        }\n        const text = candidate === null || candidate === void 0 ? void 0 : (_candidate_content = candidate.content) === null || _candidate_content === void 0 ? void 0 : (_candidate_content_parts = _candidate_content.parts) === null || _candidate_content_parts === void 0 ? void 0 : (_candidate_content_parts_ = _candidate_content_parts[0]) === null || _candidate_content_parts_ === void 0 ? void 0 : _candidate_content_parts_.text;\n        if (!text) {\n            console.error(\"‚ö†Ô∏è Candidate text missing. Candidate object:\", candidate);\n            throw new Error(\"Gemini returned empty candidate text\");\n        }\n        // Remove any leading/trailing triple backticks and language tags\n        const cleanedText = text.replace(/```[a-z]*\\n/, \"\").replace(/```$/, \"\").trim();\n        console.log(\"üîç Cleaned Gemini candidate text:\", cleanedText);\n        try {\n            const json = JSON.parse(cleanedText);\n            console.log(\"‚úÖ Parsed Gemini response JSON:\", json);\n            return json;\n        } catch (parseError) {\n            console.error(\"üß® JSON parsing error:\", parseError, \"Raw cleaned text received:\", cleanedText);\n            throw new Error(\"Failed to parse Gemini candidate text as JSON\");\n        }\n    } catch (err) {\n        console.error(\"‚ùå Error in extractExpenseDataFromGemini:\", err);\n        throw err;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9nZW1pbmkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLGVBQWVBLDZCQUE2QkMsT0FBZTtJQUNoRSw0RUFBNEU7SUFDNUUsSUFBSSxPQUFPQyxJQUFJLENBQUNELFVBQVU7UUFDeEJFLFFBQVFDLElBQUksQ0FBQztRQUNiLE9BQU87WUFDTEMsUUFBUTtZQUNSQyxRQUFRO1lBQ1JDLE1BQU07WUFDTkMsVUFBVTtRQUNaO0lBQ0Y7SUFFQSxNQUFNQyxTQUFTQyx5Q0FBc0M7SUFDckQsSUFBSSxDQUFDRCxRQUFRO1FBQ1gsTUFBTSxJQUFJSSxNQUFNO0lBQ2xCO0lBRUEsTUFBTUMsV0FBVyxnR0FBdUcsT0FBUEw7SUFFakgsTUFBTU0sU0FBUyx3UUFTUCxPQUFSZCxTQUFRO0lBWVIsSUFBSTtZQW9CZ0JlLG9CQU1MQywyQkFBQUEsMEJBQUFBO1FBekJiLE1BQU1DLFdBQVcsTUFBTUMsTUFBTUwsVUFBVTtZQUNyQ00sUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQkMsVUFBVTtvQkFDUjt3QkFDRUMsT0FBTzs0QkFBQztnQ0FBRUMsTUFBTVo7NEJBQU87eUJBQUU7b0JBQzNCO2lCQUNEO1lBQ0g7UUFDRjtRQUNBLE1BQU1DLFNBQVMsTUFBTUUsU0FBU1UsSUFBSTtRQUNsQ3pCLFFBQVEwQixHQUFHLENBQUMsNEJBQTRCTixLQUFLQyxTQUFTLENBQUNSLFFBQVEsTUFBTTtRQUVyRSxJQUFJQSxPQUFPYyxLQUFLLEVBQUU7WUFDaEIzQixRQUFRMkIsS0FBSyxDQUFDLHdCQUF3QmQsT0FBT2MsS0FBSztZQUNsRCxNQUFNLElBQUlqQixNQUFNRyxPQUFPYyxLQUFLLENBQUNDLE9BQU8sSUFBSTtRQUMxQztRQUVBLE1BQU1kLFlBQVlELG1CQUFBQSw4QkFBQUEscUJBQUFBLE9BQVFnQixVQUFVLGNBQWxCaEIseUNBQUFBLGtCQUFvQixDQUFDLEVBQUU7UUFDekMsSUFBSSxDQUFDQyxXQUFXO1lBQ2RkLFFBQVEyQixLQUFLLENBQUMsbUNBQW1DUCxLQUFLQyxTQUFTLENBQUNSLFFBQVEsTUFBTTtZQUM5RSxNQUFNLElBQUlILE1BQU07UUFDbEI7UUFFQSxNQUFNYyxPQUFPVixzQkFBQUEsaUNBQUFBLHFCQUFBQSxVQUFXZ0IsT0FBTyxjQUFsQmhCLDBDQUFBQSwyQkFBQUEsbUJBQW9CUyxLQUFLLGNBQXpCVCxnREFBQUEsNEJBQUFBLHdCQUEyQixDQUFDLEVBQUUsY0FBOUJBLGdEQUFBQSwwQkFBZ0NVLElBQUk7UUFDakQsSUFBSSxDQUFDQSxNQUFNO1lBQ1R4QixRQUFRMkIsS0FBSyxDQUFDLGdEQUFnRGI7WUFDOUQsTUFBTSxJQUFJSixNQUFNO1FBQ2xCO1FBRUEsaUVBQWlFO1FBQ2pFLE1BQU1xQixjQUFjUCxLQUFLUSxPQUFPLENBQUMsZUFBZSxJQUFJQSxPQUFPLENBQUMsUUFBUSxJQUFJQyxJQUFJO1FBQzVFakMsUUFBUTBCLEdBQUcsQ0FBQyxxQ0FBcUNLO1FBRWpELElBQUk7WUFDRixNQUFNTixPQUFPTCxLQUFLYyxLQUFLLENBQUNIO1lBQ3hCL0IsUUFBUTBCLEdBQUcsQ0FBQyxrQ0FBa0NEO1lBQzlDLE9BQU9BO1FBQ1QsRUFBRSxPQUFPVSxZQUFZO1lBQ25CbkMsUUFBUTJCLEtBQUssQ0FBQywwQkFBMEJRLFlBQVksOEJBQThCSjtZQUNsRixNQUFNLElBQUlyQixNQUFNO1FBQ2xCO0lBQ0YsRUFBRSxPQUFPMEIsS0FBSztRQUNacEMsUUFBUTJCLEtBQUssQ0FBQyw0Q0FBNENTO1FBQzFELE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsiQzpcXEhUTUwgQ1NTXFxXRUIgREVWIENPVVJTRSBIXFxSZWFjdFxcSGFja2F0aG9uXFx0cnlcXHRyeTFcXGV4cGVuc2UtdHJhY2tlclxcbGliXFxnZW1pbmkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RFeHBlbnNlRGF0YUZyb21HZW1pbmkob2NyVGV4dDogc3RyaW5nKSB7XHJcbiAgLy8gSWYgdGhlIHRleHQgY29udGFpbnMgXCJPVFBcIiAoY2FzZS1pbnNlbnNpdGl2ZSksIGltbWVkaWF0ZWx5IHJldHVybiBERU5JRUQuXHJcbiAgaWYgKC9vdHAvaS50ZXN0KG9jclRleHQpKSB7XHJcbiAgICBjb25zb2xlLndhcm4oXCLinYwgT1RQIGRldGVjdGVkIGluIHRleHQuIERlbnlpbmcgcHJvY2Vzc2luZy5cIik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB2ZW5kb3I6IFwiREVOSUVEXCIsXHJcbiAgICAgIGFtb3VudDogXCJERU5JRURcIixcclxuICAgICAgZGF0ZTogXCJERU5JRURcIixcclxuICAgICAgY2F0ZWdvcnk6IFwiREVOSUVEXCIsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY29uc3QgYXBpS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR0VNSU5JX0FQSV9LRVk7XHJcbiAgaWYgKCFhcGlLZXkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkdlbWluaSBBUEkga2V5IGlzIG1pc3NpbmcuIENoZWNrIHlvdXIgLmVudi5sb2NhbCBmaWxlLlwiKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGVuZHBvaW50ID0gYGh0dHBzOi8vZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29tL3YxYmV0YS9tb2RlbHMvZ2VtaW5pLTIuMC1mbGFzaDpnZW5lcmF0ZUNvbnRlbnQ/a2V5PSR7YXBpS2V5fWA7XHJcblxyXG4gIGNvbnN0IHByb21wdCA9IGBcclxuWW91IGFyZSBhbiBpbnRlbGxpZ2VudCBleHBlbnNlIHBhcnNlci4gRXh0cmFjdCB0aGUgZm9sbG93aW5nIGZyb20gbWVzc3kgcmVjZWlwdCB0ZXh0OlxyXG4tIHZlbmRvclxyXG4tIGFtb3VudCAobnVtYmVyIG9ubHksIG5vIHN5bWJvbHMpXHJcbi0gZGF0ZSAoSVNPIGZvcm1hdCBwcmVmZXJyZWQpXHJcbi0gY2F0ZWdvcnkgKEZvb2QsIFRyYW5zcG9ydCwgU2hvcHBpbmcsIFV0aWxpdGllcywgRW50ZXJ0YWlubWVudCwgT3RoZXIpXHJcblxyXG5SZWNlaXB0IHRleHQ6XHJcblwiXCJcIlxyXG4ke29jclRleHR9XHJcblwiXCJcIlxyXG5cclxuUmVzcG9uZCBPTkxZIHdpdGggSlNPTiBsaWtlOlxyXG57XHJcbiAgXCJ2ZW5kb3JcIjogXCIuLi5cIixcclxuICBcImFtb3VudFwiOiBcIi4uLlwiLFxyXG4gIFwiZGF0ZVwiOiBcIi4uLlwiLFxyXG4gIFwiY2F0ZWdvcnlcIjogXCIuLi5cIlxyXG59XHJcbmA7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGVuZHBvaW50LCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGNvbnRlbnRzOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIHBhcnRzOiBbeyB0ZXh0OiBwcm9tcHQgfV0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICAgIH0pLFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBjb25zb2xlLmxvZyhcIvCflI0gR2VtaW5pIGZ1bGwgcmVzcG9uc2U6XCIsIEpTT04uc3RyaW5naWZ5KHJlc3VsdCwgbnVsbCwgMikpO1xyXG5cclxuICAgIGlmIChyZXN1bHQuZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIvCflKUgR2VtaW5pIEFQSSBFcnJvcjpcIiwgcmVzdWx0LmVycm9yKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3VsdC5lcnJvci5tZXNzYWdlIHx8IFwiVW5rbm93biBHZW1pbmkgQVBJIGVycm9yXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHJlc3VsdD8uY2FuZGlkYXRlcz8uWzBdO1xyXG4gICAgaWYgKCFjYW5kaWRhdGUpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBObyBjYW5kaWRhdGVzLiBGdWxsIHJlc3BvbnNlOlwiLCBKU09OLnN0cmluZ2lmeShyZXN1bHQsIG51bGwsIDIpKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gY2FuZGlkYXRlIGZvdW5kIGluIEdlbWluaSByZXNwb25zZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0ZXh0ID0gY2FuZGlkYXRlPy5jb250ZW50Py5wYXJ0cz8uWzBdPy50ZXh0O1xyXG4gICAgaWYgKCF0ZXh0KSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLimqDvuI8gQ2FuZGlkYXRlIHRleHQgbWlzc2luZy4gQ2FuZGlkYXRlIG9iamVjdDpcIiwgY2FuZGlkYXRlKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VtaW5pIHJldHVybmVkIGVtcHR5IGNhbmRpZGF0ZSB0ZXh0XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJlbW92ZSBhbnkgbGVhZGluZy90cmFpbGluZyB0cmlwbGUgYmFja3RpY2tzIGFuZCBsYW5ndWFnZSB0YWdzXHJcbiAgICBjb25zdCBjbGVhbmVkVGV4dCA9IHRleHQucmVwbGFjZSgvYGBgW2Etel0qXFxuLywgXCJcIikucmVwbGFjZSgvYGBgJC8sIFwiXCIpLnRyaW0oKTtcclxuICAgIGNvbnNvbGUubG9nKFwi8J+UjSBDbGVhbmVkIEdlbWluaSBjYW5kaWRhdGUgdGV4dDpcIiwgY2xlYW5lZFRleHQpO1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKGNsZWFuZWRUZXh0KTtcclxuICAgICAgY29uc29sZS5sb2coXCLinIUgUGFyc2VkIEdlbWluaSByZXNwb25zZSBKU09OOlwiLCBqc29uKTtcclxuICAgICAgcmV0dXJuIGpzb247XHJcbiAgICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLwn6eoIEpTT04gcGFyc2luZyBlcnJvcjpcIiwgcGFyc2VFcnJvciwgXCJSYXcgY2xlYW5lZCB0ZXh0IHJlY2VpdmVkOlwiLCBjbGVhbmVkVGV4dCk7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBwYXJzZSBHZW1pbmkgY2FuZGlkYXRlIHRleHQgYXMgSlNPTlwiKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgRXJyb3IgaW4gZXh0cmFjdEV4cGVuc2VEYXRhRnJvbUdlbWluaTpcIiwgZXJyKTtcclxuICAgIHRocm93IGVycjtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImV4dHJhY3RFeHBlbnNlRGF0YUZyb21HZW1pbmkiLCJvY3JUZXh0IiwidGVzdCIsImNvbnNvbGUiLCJ3YXJuIiwidmVuZG9yIiwiYW1vdW50IiwiZGF0ZSIsImNhdGVnb3J5IiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0dFTUlOSV9BUElfS0VZIiwiRXJyb3IiLCJlbmRwb2ludCIsInByb21wdCIsInJlc3VsdCIsImNhbmRpZGF0ZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb250ZW50cyIsInBhcnRzIiwidGV4dCIsImpzb24iLCJsb2ciLCJlcnJvciIsIm1lc3NhZ2UiLCJjYW5kaWRhdGVzIiwiY29udGVudCIsImNsZWFuZWRUZXh0IiwicmVwbGFjZSIsInRyaW0iLCJwYXJzZSIsInBhcnNlRXJyb3IiLCJlcnIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/gemini.ts\n"));

/***/ })

});